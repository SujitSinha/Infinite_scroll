{"version":3,"file":"static/js/360.f7131f57.chunk.js","mappings":"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","sources":["Usercard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteSharpIcon from \"@mui/icons-material/DeleteSharp\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\n\r\nfunction Usercard({ userData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(\"\");\r\n  const [userDetails, setUserDetails] = useState(\"\");\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editedName, setEditedName] = useState(\"\");\r\n  const [editedJob, setEditedJob] = useState(\"\");\r\n  const [editId, setEditId] = useState(\"\");\r\n  const [editSuccess, setEditSuccess] = useState(false);\r\n  const [deleteSuccess, setDeleteSuccess] = useState(false);\r\n\r\n  const deleteHandleClose = () => {\r\n    setShowDelete(false);\r\n    setDeleteConfirm(false);\r\n  };\r\n\r\n  const handleOpen = (id) => {\r\n    setOpen(true);\r\n    console.log(id);\r\n    fetch(`https://reqres.in/api/users/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setUserDetails(data.data));\r\n    setOpen(true);\r\n  };\r\n\r\n  const deleteConfirmation = () => {\r\n    setDeleteConfirm(true);\r\n    setShowDelete(false);\r\n    deleteUser(deleteId);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setShowDelete(true);\r\n    setDeleteId(id);\r\n  };\r\n\r\n  const deleteUser = (id) => {\r\n    fetch(`https://reqres.in/api/users/${id}`, {\r\n      method: \"DELETE\"\r\n    }).then((res) => {\r\n      console.log('deleted', res)\r\n      setDeleteSuccess(true);\r\n    });\r\n  };\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const fetchUserData = (id) => {\r\n    fetch(`https://reqres.in/api/users/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUserDetails(data.data);\r\n        setEditedName(`${data.data.first_name} ${data.data.last_name}`);\r\n      });\r\n  };\r\n\r\n  const handleUserEdit = (id) => {\r\n    setEditSuccess(false);\r\n    setIsEdit(true);\r\n    setEditId(id);\r\n    fetchUserData(id);\r\n  };\r\n\r\n  const handleEditClose = (id) => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const closeEditNotification = () => {\r\n    setEditSuccess(false);\r\n  };\r\n\r\n  const closeDeleteNotification = () => {\r\n    setDeleteSuccess(false);\r\n  };\r\n\r\n  const handleEditSave = () => {\r\n    fetch(`https://reqres.in/api/users/${editId}`, {\r\n      method: \"PUT\",\r\n      body: {\r\n        user: JSON.stringify(editedName),\r\n        job: JSON.stringify(editedJob),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setEditSuccess(true);\r\n      });\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {userData.length > 0 &&\r\n          userData.map((user, index) => {\r\n            return (\r\n              <Grid\r\n                item\r\n                key={`GridItem-${index}`}\r\n                xs={12}\r\n                sm={8}\r\n                md={4}\r\n                lg={4}\r\n                xl={4}\r\n                align=\"center\"\r\n              >\r\n                <Card sx={{ maxWidth: 355 }}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"325\"\r\n                    width=\"355\"\r\n                    image={user.avatar}\r\n                    alt={user.name}\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                      {user.first_name} {user.last_name}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" onClick={() => handleOpen(user.id)}>\r\n                      More Details\r\n                    </Button>                \r\n                  <EditIcon\r\n                    onClick={() => handleUserEdit(user.id)}\r\n                    style={{\r\n                      marginLeft: \"44%\",\r\n                      marginRight: \"5%\",\r\n                      marginBottom: \"5%\",\r\n                    }}\r\n                  />\r\n                  <DeleteSharpIcon\r\n                    onClick={() => handleDelete(user.id)}\r\n                    style={{\r\n                      marginBottom: \"5%\",\r\n                    }}\r\n                  />\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })}\r\n      </Grid>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            {userDetails.first_name} {userDetails.last_name}\r\n          </Typography>\r\n          <IconButton\r\n            style={{ position: \"absolute\", left: \"88%\", top: \"2%\" }}\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"355\"\r\n            width=\"355\"\r\n            image={userDetails.avatar}\r\n            alt={userDetails.name}\r\n          />\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {userDetails.email}\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n      <Dialog\r\n        open={showDelete}\r\n        onClose={deleteHandleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure you want to delete this user?\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={deleteHandleClose}>No</Button>\r\n          <Button onClick={deleteConfirmation}>Yes</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={isEdit} onClose={handleEditClose}>\r\n        <DialogTitle>Edit User Details</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={editedName}\r\n            onChange={(e) => setEditedName(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"Job\"\r\n            label=\"Job\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={editedJob}\r\n            onChange={(e) => setEditedJob(e.target.value)}\r\n            variant=\"standard\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditClose}>Cancel</Button>\r\n          <Button onClick={handleEditSave}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={editSuccess}\r\n        autoHideDuration={1500}\r\n        onClose={closeEditNotification}\r\n        style={{\r\n          color: \"rgb(72 95 195)\",\r\n          position: \"absolute\",\r\n          top: \"-90%\",\r\n          left: \"40%\",\r\n        }}\r\n      >\r\n        <Alert\r\n          onClose={closeEditNotification}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          User Data Edited Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={deleteSuccess}\r\n        autoHideDuration={1500}\r\n        onClose={closeDeleteNotification}\r\n        style={{\r\n          color: \"rgb(72 95 195)\",\r\n          position: \"absolute\",\r\n          top: \"-90%\",\r\n          left: \"40%\",\r\n        }}\r\n      >\r\n        <Alert\r\n          onClose={closeDeleteNotification}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          User Deleted Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Usercard;\r\n"],"names":["userData","useState","open","setOpen","showDelete","setShowDelete","setDeleteConfirm","deleteId","setDeleteId","userDetails","setUserDetails","isEdit","setIsEdit","editedName","setEditedName","editedJob","setEditedJob","editId","setEditId","editSuccess","setEditSuccess","deleteSuccess","setDeleteSuccess","deleteHandleClose","deleteUser","id","fetch","method","then","res","console","log","handleClose","handleUserEdit","json","data","first_name","last_name","fetchUserData","handleEditClose","closeEditNotification","closeDeleteNotification","container","spacing","length","map","user","index","item","xs","sm","md","lg","xl","align","sx","maxWidth","component","height","width","image","avatar","alt","name","gutterBottom","variant","size","onClick","style","marginLeft","marginRight","marginBottom","onClose","position","top","left","transform","bgcolor","border","boxShadow","p","mt","email","margin","label","type","fullWidth","value","onChange","e","target","body","JSON","stringify","job","autoHideDuration","color","severity"],"sourceRoot":""}